{"version":3,"file":"static/js/755.8c4f7d20.chunk.js","mappings":"4PAIaA,GAAWC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,mHAORE,GAAQF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,yMAYLI,EAAQJ,EAAAA,GAAAA,MAAH,uQAaLK,GAAQL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,iIAQLO,EAASP,EAAAA,GAAAA,OAAH,2X,mBChCNQ,EAAY,WACvB,IAAMC,GAAUC,EAAAA,EAAAA,MACVC,GAAaD,EAAAA,EAAAA,MAEbE,GAAWC,EAAAA,EAAAA,MAOjB,OACE,0BACE,SAAC,KAAD,CACEC,cAAe,CAAEC,MAAO,GAAIC,SAAU,IAEtCC,SAVe,SAAC,EAAD,GAAyC,IAAtCF,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,SAAcE,EAAgB,EAAhBA,UAC3CN,GAASO,EAAAA,EAAAA,IAAM,CAAEJ,MAAAA,EAAOC,SAAAA,KACxBE,GACD,EAIG,UAKE,UAACnB,EAAD,CAAUqB,aAAa,MAAvB,WACE,UAAChB,EAAD,CAAOiB,QAASZ,EAAhB,mBAEE,SAACP,EAAD,CAAOoB,KAAK,QAAQC,KAAK,QAAQC,GAAIf,QAEvC,SAACJ,EAAD,CAAOkB,KAAK,QAAQE,WAAW,UAC/B,UAACrB,EAAD,CAAOiB,QAASV,EAAhB,sBAEE,SAACT,EAAD,CAAOoB,KAAK,WAAWC,KAAK,WAAWC,GAAIb,QAE7C,SAACN,EAAD,CAAOkB,KAAK,WAAWE,WAAW,UAClC,SAAClB,EAAD,CAAQe,KAAK,SAAb,yBAKT,EC3Cc,SAASI,IACtB,OACE,4BACE,SAACC,EAAA,EAAD,WACE,wCAEF,SAACnB,EAAD,MAGL,C","sources":["components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","pages/Login/Login.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const FormWrap = styled(Form)`\n  border: 1px solid black;\n  padding: 30px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Input = styled(Field)`\n  box-sizing: border-box;\n  width: 200px;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  outline: none;\n  &:hover,\n  &:focus {\n    border-color: red;\n  }\n  padding: 2px;\n`;\n\nexport const Label = styled.label`\n  box-sizing: border-box;\n  display: flex;\n  justify-content: space-between;\n  flex-direction: row;\n  align-items: center;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.17;\n  letter-spacing: 0.01em;\n  margin-top: 10px;\n`;\n\nexport const Alert = styled(ErrorMessage)`\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 1.88;\n  letter-spacing: 0.06em;\n  color: red;\n`;\n\nexport const Button = styled.button`\n  border: none;\n  margin-top: 30px;\n  padding: 5px;\n  font-weight: 500;\n  font-size: 10px;\n  line-height: 1.88;\n  letter-spacing: 0.06em;\n  background-color: rgba(33, 33, 33, 0.2);\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  border-radius: 4px;\n  &:hover,\n  &:focus {\n    background-color: red;\n  }\n  cursor: pointer;\n  width: 100px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport { Formik } from 'formik';\nimport {\n  FormWrap,\n  Input,\n  Label,\n  Alert,\n  Button,\n} from 'components/LoginForm/LoginForm.styled';\nimport { logIn } from 'redux/auth/operations';\n\nexport const LoginForm = () => {\n  const emailId = nanoid();\n  const passwordId = nanoid();\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = ({ email, password }, { resetForm }) => {\n    dispatch(logIn({ email, password }));\n    resetForm();\n  };\n\n  return (\n    <div>\n      <Formik\n        initialValues={{ email: '', password: '' }}\n        // validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        <FormWrap autoComplete=\"off\">\n          <Label htmlFor={emailId}>\n            Email\n            <Input type=\"email\" name=\"email\" id={emailId} />\n          </Label>\n          <Alert name=\"email\" compononet=\"span\" />\n          <Label htmlFor={passwordId}>\n            Password\n            <Input type=\"password\" name=\"password\" id={passwordId} />\n          </Label>\n          <Alert name=\"password\" compononet=\"span\" />\n          <Button type=\"submit\">LogIn</Button>\n        </FormWrap>\n      </Formik>\n    </div>\n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { LoginForm } from 'components/LoginForm/LoginForm';\n\nexport default function Login() {\n  return (\n    <div>\n      <Helmet>\n        <title>Login</title>\n      </Helmet>\n      <LoginForm />\n    </div>\n  );\n}\n"],"names":["FormWrap","styled","Form","Input","Field","Label","Alert","ErrorMessage","Button","LoginForm","emailId","nanoid","passwordId","dispatch","useDispatch","initialValues","email","password","onSubmit","resetForm","logIn","autoComplete","htmlFor","type","name","id","compononet","Login","Helmet"],"sourceRoot":""}