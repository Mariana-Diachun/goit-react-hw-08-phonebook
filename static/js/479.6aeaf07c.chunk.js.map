{"version":3,"file":"static/js/479.6aeaf07c.chunk.js","mappings":"oPAWA,EATeA,EAAAA,KAAaC,MAAM,CAChCC,MAAOF,EAAAA,KAAaG,SAAS,qBAAqBD,MAAM,oBACxDE,SAAUJ,EAAAA,KAEPG,SAAS,wBACTE,IAAI,EAAG,0CACPC,IAAI,GAAI,4C,mBCJAC,GAAWC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,uFAMRE,GAAQF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,iQAeLI,EAAQJ,EAAAA,GAAAA,MAAH,0RAcLK,EAAQL,EAAAA,GAAAA,IAAH,2JASLM,EAASN,EAAAA,GAAAA,OAAH,yd,mBCjCNO,EAAY,WACvB,IAAMC,GAAUC,EAAAA,EAAAA,MACVC,GAAaD,EAAAA,EAAAA,MAEbE,GAAWC,EAAAA,EAAAA,MAOjB,OACE,0BACE,SAAC,KAAD,CACEC,cAAe,CAAEnB,MAAO,GAAIE,SAAU,IACtCkB,iBAAkBC,EAClBC,SAVe,SAAC,EAAD,GAAyC,IAAtCtB,EAAqC,EAArCA,MAAOE,EAA8B,EAA9BA,SAAcqB,EAAgB,EAAhBA,UAC3CN,GAASO,EAAAA,EAAAA,IAAM,CAAExB,MAAAA,EAAOE,SAAAA,KACxBqB,GACD,EAIG,UAKE,UAAClB,EAAD,CAAUoB,aAAa,MAAvB,WACE,UAACf,EAAD,CAAOgB,QAASZ,EAAhB,mBAEE,SAACN,EAAD,CAAOmB,KAAK,QAAQC,KAAK,QAAQC,GAAIf,QAEvC,SAACH,EAAD,WACE,SAAC,KAAD,CAAciB,KAAK,QAAQE,WAAW,YAExC,UAACpB,EAAD,CAAOgB,QAASV,EAAhB,sBAEE,SAACR,EAAD,CAAOmB,KAAK,WAAWC,KAAK,WAAWC,GAAIb,QAE7C,SAACL,EAAD,WACE,SAAC,KAAD,CAAciB,KAAK,WAAWE,WAAW,YAE3C,SAAClB,EAAD,CAAQe,KAAK,SAAb,0BAKT,EClDc,SAASI,IACtB,OACE,4BACE,SAACC,EAAA,EAAD,WACE,wCAEF,SAACnB,EAAD,MAGL,C","sources":["validation/validationLoginForm.js","components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","pages/Login/Login.jsx"],"sourcesContent":["import * as yup from 'yup';\n\nconst schema = yup.object().shape({\n  email: yup.string().required('Email is required').email('Email is invalid'),\n  password: yup\n    .string()\n    .required('Password is required')\n    .min(6, 'Password must be at least 6 characters')\n    .max(40, 'Password must not exceed 40 characters'),\n});\n\nexport default schema;\n","import styled from 'styled-components';\n\nimport { Form, Field } from 'formik';\n\nexport const FormWrap = styled(Form)`\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Input = styled(Field)`\n  box-sizing: border-box;\n  border: 2px solid #00ca90;\n  border-radius: 50px;\n  outline: none;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 1.17;\n  &:hover,\n  &:focus {\n    border-color: red;\n  }\n  padding: 5px;\n`;\n\nexport const Label = styled.label`\n  box-sizing: border-box;\n  display: flex;\n  justify-content: space-between;\n  flex-direction: row;\n  align-items: center;\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 1.17;\n  letter-spacing: 0.01em;\n  color: #4e34b5;\n  margin-top: 10px;\n`;\n\nexport const Error = styled.div`\n  color: #df4f06;\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 1.6;\n  letter-spacing: 0.06em;\n  margin-left: 120px;\n`;\n\nexport const Button = styled.button`\n  margin-top: 30px;\n  padding: 5px 20px 5px 20px;\n  /* border-color: #4e34b5; */\n  /* padding-left: 10px;\n  padding-right: 10px; */\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 19px;\n  color: #ffffff;\n  letter-spacing: 0.06em;\n  background-color: #53cda6;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n\n  border-radius: 50px;\n  &:hover,\n  &:focus {\n    background-color: #df4f06;\n  }\n  cursor: pointer;\n  width: 110px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport { Formik } from 'formik';\nimport { ErrorMessage } from 'formik';\n\nimport schema from 'validation/validationLoginForm';\nimport {\n  FormWrap,\n  Input,\n  Label,\n  Button,\n  Error,\n} from 'components/LoginForm/LoginForm.styled';\nimport { logIn } from 'redux/auth/operations';\n\nexport const LoginForm = () => {\n  const emailId = nanoid();\n  const passwordId = nanoid();\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = ({ email, password }, { resetForm }) => {\n    dispatch(logIn({ email, password }));\n    resetForm();\n  };\n\n  return (\n    <div>\n      <Formik\n        initialValues={{ email: '', password: '' }}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        <FormWrap autoComplete=\"off\">\n          <Label htmlFor={emailId}>\n            Email\n            <Input type=\"email\" name=\"email\" id={emailId} />\n          </Label>\n          <Error>\n            <ErrorMessage name=\"email\" compononet=\"span\" />\n          </Error>\n          <Label htmlFor={passwordId}>\n            Password\n            <Input type=\"password\" name=\"password\" id={passwordId} />\n          </Label>\n          <Error>\n            <ErrorMessage name=\"password\" compononet=\"span\" />\n          </Error>\n          <Button type=\"submit\">Log In</Button>\n        </FormWrap>\n      </Formik>\n    </div>\n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { LoginForm } from 'components/LoginForm/LoginForm';\n\nexport default function Login() {\n  return (\n    <div>\n      <Helmet>\n        <title>Login</title>\n      </Helmet>\n      <LoginForm />\n    </div>\n  );\n}\n"],"names":["yup","shape","email","required","password","min","max","FormWrap","styled","Form","Input","Field","Label","Error","Button","LoginForm","emailId","nanoid","passwordId","dispatch","useDispatch","initialValues","validationSchema","schema","onSubmit","resetForm","logIn","autoComplete","htmlFor","type","name","id","compononet","Login","Helmet"],"sourceRoot":""}