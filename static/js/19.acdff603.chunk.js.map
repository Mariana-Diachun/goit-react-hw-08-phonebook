{"version":3,"file":"static/js/19.acdff603.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","validation/validationContactForm.js","components/ContactForm/ContactForm.styled.jsx","components/UI/Section/Section.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/UI/Loader/Loader.jsx","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","pages/Contacts/Contacts.styled.js","pages/Contacts/Contacts.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.contacts;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter.filter;\n","import * as yup from 'yup';\n\nconst schema = yup.object().shape({\n  name: yup\n    .string('Name may contain only letters, apostrophe, dash and spaces.')\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      'For example Jacob Mercer!'\n    )\n    .min(2, 'Name is too short!')\n    .max(30, 'Name is too long!')\n    .required('Please, enter your name!'),\n  number: yup\n    .string()\n    .matches(\n      /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n      'Phone number must be digits'\n    )\n    .min(9, 'Please use this format 000-00-00')\n    .required('Please, enter your phone number!'),\n});\n\nexport default schema;\n","// import styled from 'styled-components';\nimport styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\n\nexport const FormWrap = styled(Form)`\n  padding: 30px;\n  display: flex;\n  flex-direction: column;\n  padding: ${({ theme }) => theme.spacing(10)};\n  background-color: ${({ theme }) => theme.colors.light};\n  border-radius: ${({ theme }) => theme.spacing(2)};\n  color: ${({ theme }) => theme.colors.gray};\n  box-shadow: ${({ theme }) => theme.shadows.regular};\n  position: relative;\n  width: 400px;\n  height: 100%;\n`;\n\nexport const Input = styled(Field)`\n  box-sizing: border-box;\n  border: 2px solid #00ca90;\n  border-radius: 50px;\n  outline: none;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 1.17;\n  &:hover,\n  &:focus {\n    border-color: red;\n  }\n  padding: 5px;\n`;\n\nexport const Label = styled.label`\n  box-sizing: border-box;\n  display: flex;\n  justify-content: space-between;\n  flex-direction: row;\n  align-items: center;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 1.17;\n  letter-spacing: 0.01em;\n  color: #4e34b5;\n  margin-top: 10px;\n`;\n\nexport const Error = styled.div`\n  color: #df4f06;\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 1.6;\n  letter-spacing: 0.06em;\n  margin-left: 120px;\n`;\n\nexport const Button = styled.button`\n  margin-top: 30px;\n  padding: 5px 20px 5px 20px;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 19px;\n  color: #ffffff;\n  letter-spacing: 0.06em;\n  background-color: #53cda6;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  border-radius: 50px;\n  &:hover,\n  &:focus {\n    background-color: df4f06;\n  }\n  cursor: pointer;\n  width: 160px;\n  margin-left: 90px;\n`;\n","import styled from '@emotion/styled';\n\nexport const Section = styled.section`\n  padding-top: ${({ theme }) => theme.spacing(10)};\n  padding-bottom: ${({ theme }) => theme.spacing(10)};\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport { Formik } from 'formik';\nimport Notiflix from 'notiflix';\n\nimport schema from 'validation/validationContactForm';\n\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nimport {\n  Input,\n  FormWrap,\n  Label,\n  Button,\n  Error,\n} from 'components/ContactForm/ContactForm.styled';\nimport { Section } from 'components/UI/Section/Section.styled';\n\nexport const ContactForm = () => {\n  const nameId = nanoid();\n  const numberId = nanoid();\n\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = ({ name, number }, { resetForm }) => {\n    const hasContact = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (hasContact)\n      return Notiflix.Notify.failure(`${name} is already in contacts`);\n\n    dispatch(addContact({ name, number }));\n    resetForm();\n  };\n\n  return (\n    <Section>\n      <Formik\n        initialValues={{ name: '', number: '' }}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        <FormWrap autoComplete=\"off\">\n          <Label htmlFor={nameId}>\n            Name\n            <Input type=\"text\" name=\"name\" id={nameId} />\n          </Label>\n          <Error name=\"name\" compononet=\"span\" />\n          <Label htmlFor={numberId}>\n            Number\n            <Input type=\"tel\" name=\"number\" id={numberId} />\n          </Label>\n          <Error name=\"number\" compononet=\"span\" />\n          <Button type=\"submit\">Add contact</Button>\n        </FormWrap>\n      </Formik>\n    </Section>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Box = styled.div`\n  width: ${({ theme }) => theme.spacing(100)};\n  margin-left: auto;\n  margin-right: auto;\n  position: relative;\n  /* margin-bottom: ${({ theme }) => theme.spacing(20)}; */\n`;\n\nexport const Label = styled.label`\n  /* margin-right: 30px; */\n  display: flex;\n\n  align-items: baseline;\n`;\n\nexport const InputSearch = styled.input`\n  width: 100%;\n  height: ${({ theme }) => theme.spacing(14)};\n  border-style: none;\n  border-bottom: 1px solid ${({ theme }) => theme.colors.dark};\n  background-color: transparent;\n  padding: ${({ theme }) => theme.spacing(4)};\n  padding-right: ${({ theme }) => theme.spacing(10)};\n  outline: none;\n  transition: ${({ theme }) => theme.animation.cubicBezier};\n  font-size: ${({ theme }) => theme.fontSizes.medium};\n  color: ${({ theme }) => theme.colors.dark};\n  font-weight: 300;\n  letter-spacing: 0.03em;\n  &::placeholder {\n    font-weight: 200;\n    text-align: center;\n  }\n  &:hover,\n  &:focus {\n    border-color: red;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from 'nanoid';\n\nimport { searchByName } from 'redux/contacts/slices/filterSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { Box, Label, InputSearch } from 'components/Filter/Filter.styled';\nimport { Section } from 'components/UI/Section/Section.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n  const inputID = nanoid();\n\n  return (\n    <Section>\n      <Box>\n        <Label htmlFor={inputID}>\n          <InputSearch\n            id={inputID}\n            type=\"text\"\n            value={filter}\n            name=\"filter\"\n            placeholder=\"Please, enter the name you want to find\"\n            onChange={e => dispatch(searchByName(e.target.value))}\n          />\n        </Label>\n      </Box>\n    </Section>\n  );\n};\n","import { ThreeDots } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <ThreeDots\n      height=\"80\"\n      width=\"80\"\n      radius=\"9\"\n      color=\"#4fa94d\"\n      ariaLabel=\"three-dots-loading\"\n      wrapperStyle={{}}\n      wrapperClassName=\"\"\n      visible={true}\n    />\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const ContactWrap = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: ${({ theme }) => theme.spacing(5)};\n  background-color: ${({ theme }) => theme.colors.light};\n  border-radius: ${({ theme }) => theme.spacing(2)};\n  color: ${({ theme }) => theme.colors.primary};\n  box-shadow: ${({ theme }) => theme.shadows.regular};\n  position: relative;\n  width: 100%;\n  height: 20px;\n  margin-bottom: 10px;\n`;\nexport const Contact = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const Button = styled.button`\n  cursor: pointer;\n  text-align: center;\n  height: 20px;\n  width: 50px;\n  border-radius: 4px;\n  &:hover,\n  &:focus {\n    background-color: red;\n  }\n  margin-left: 30px;\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\n\nimport { deleteContact } from 'redux/contacts/operations';\nimport { TiDeleteOutline } from 'react-icons/ti';\nimport {\n  Contact,\n  Button,\n  ContactWrap,\n} from 'components/ContactItem/ContactItem.styled';\n\nexport const ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <ContactWrap>\n      <Contact id={id}>\n        {name} : {number}\n      </Contact>\n      <Button type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n        <TiDeleteOutline size={24} />\n      </Button>\n    </ContactWrap>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style-type: square;\n`;\n","import { useSelector } from 'react-redux';\n\nimport { selectContacts, selectFilter } from 'redux/contacts/selectors';\n\nimport { ContactItem } from 'components/ContactItem/ContactItem';\nimport { List } from 'components/ContactList/ContactList.styled';\nimport { Section } from 'components/UI/Section/Section.styled';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  if (filteredContacts) {\n    return (\n      <Section>\n        <List>\n          {filteredContacts.map(contact => {\n            return <ContactItem key={contact.id} {...contact} />;\n          })}\n        </List>\n      </Section>\n    );\n  }\n};\n","import styled from 'styled-components';\n\nexport const Box = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { Helmet } from 'react-helmet';\n\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { Loader } from 'components/UI/Loader/Loader';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Box } from './Contacts.styled';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Box>\n      <Helmet>\n        <h2>Phonebook</h2>\n      </Helmet>\n      <ContactForm />\n      {isLoading && !error && <Loader />}\n      <Filter />\n      <ContactList />\n    </Box>\n  );\n}\n"],"names":["selectContacts","state","contacts","selectIsLoading","isLoading","selectError","error","selectFilter","filter","yup","shape","name","matches","min","max","required","number","FormWrap","styled","Form","theme","spacing","colors","light","gray","shadows","regular","Input","Field","Label","Error","Button","Section","ContactForm","nameId","nanoid","numberId","dispatch","useDispatch","useSelector","initialValues","validationSchema","schema","onSubmit","resetForm","find","contact","toLowerCase","Notiflix","addContact","autoComplete","htmlFor","type","id","compononet","Box","InputSearch","dark","animation","cubicBezier","fontSizes","medium","Filter","inputID","value","placeholder","onChange","e","searchByName","target","Loader","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","ContactWrap","primary","Contact","ContactItem","onClick","deleteContact","size","List","ContactList","filteredContacts","includes","map","Contacts","useEffect","fetchContacts","Helmet"],"sourceRoot":""}